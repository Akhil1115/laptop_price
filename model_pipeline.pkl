import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import oneHotEncoder
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
import pickle

# Step 1: Select Features and Target
X = df[['Company', 'TypeName', 'Cpu', 'Gpu', 'OpSys', 'ScreenResolution', 'Memory', 'Ram']]
y = df['Price']  # or your target column

# Step 2: Define which columns are categorical
categorical_features = ['Company', 'TypeName', 'Cpu', 'Gpu', 'OpSys', 'ScreenResolution', 'Memory', 'Ram']

# Step 3: Create OneHotEncoder
ohe = OneHotEncoder(handle_unknown='ignore')

# Step 4: Combine encoder with model in a pipeline
preprocessor = ColumnTransformer(
    transformers=[
        ('cat', ohe, categorical_features)
    ])

model_pipeline = Pipeline(steps=[
    ('preprocessor', preprocessor),
    ('regressor', GradientBoostingRegressor())
])

# Step 5: Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 6: Fit the pipeline
model_pipeline.fit(X_train, y_train)

# Step 7: Save the pipeline (includes both encoder and model)
with open('model_pipeline.pkl', 'wb') as f:
    pickle.dump(model_pipeline, f)